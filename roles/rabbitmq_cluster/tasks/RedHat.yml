---
# RHEL/CentOS/Rocky/Oracle Linux RabbitMQ Installation
# Based on official RabbitMQ documentation: https://www.rabbitmq.com/docs/install-rpm

- name: Install EPEL repository (for older dependencies)
  yum:
    name: epel-release
    state: present
  when: ansible_distribution in ['CentOS', 'RedHat', 'Rocky', 'OracleLinux']

- name: Install required packages for RHEL-based systems
  yum:
    name:
      - curl
      - gnupg2
      - wget
      - logrotate
      - socat
    state: present

# FIXED: Import official RabbitMQ signing keys as per documentation
- name: Import primary RabbitMQ signing key
  rpm_key:
    key: https://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc
    state: present

- name: Import modern Erlang repository signing key
  rpm_key:
    key: https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key
    state: present

- name: Import RabbitMQ server repository signing key
  rpm_key:
    key: https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key
    state: present

- name: Add official RabbitMQ repositories for EL9 (RHEL 9, Rocky 9, Alma 9, etc.)
  yum_repository:
    name: "{{ repo.name }}"
    description: "{{ repo.description }}"
    baseurl: "{{ repo.baseurl }}"
    gpgcheck: yes
    gpgkey: "{{ repo.gpgkey }}"
    enabled: yes
    repo_gpgcheck: yes
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300
  loop:
    - name: modern-erlang
      description: "modern-erlang-el9"
      baseurl: "https://yum1.rabbitmq.com/erlang/el/9/$basearch\nhttps://yum2.rabbitmq.com/erlang/el/9/$basearch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key"
    - name: modern-erlang-noarch
      description: "modern-erlang-el9-noarch"
      baseurl: "https://yum1.rabbitmq.com/erlang/el/9/noarch\nhttps://yum2.rabbitmq.com/erlang/el/9/noarch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
    - name: rabbitmq-el9
      description: "rabbitmq-el9"
      baseurl: "https://yum2.rabbitmq.com/rabbitmq/el/9/$basearch\nhttps://yum1.rabbitmq.com/rabbitmq/el/9/$basearch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
    - name: rabbitmq-el9-noarch
      description: "rabbitmq-el9-noarch"
      baseurl: "https://yum2.rabbitmq.com/rabbitmq/el/9/noarch\nhttps://yum1.rabbitmq.com/rabbitmq/el/9/noarch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
  loop_control:
    loop_var: repo
  when: ansible_distribution_major_version == '9'

- name: Add official RabbitMQ repositories for EL8 (RHEL 8, Rocky 8, Alma 8, etc.)
  yum_repository:
    name: "{{ repo.name }}"
    description: "{{ repo.description }}"
    baseurl: "{{ repo.baseurl }}"
    gpgcheck: yes
    gpgkey: "{{ repo.gpgkey }}"
    enabled: yes
    repo_gpgcheck: yes
    sslverify: yes
    sslcacert: /etc/pki/tls/certs/ca-bundle.crt
    metadata_expire: 300
  loop:
    - name: modern-erlang
      description: "modern-erlang-el8"
      baseurl: "https://yum1.rabbitmq.com/erlang/el/8/$basearch\nhttps://yum2.rabbitmq.com/erlang/el/8/$basearch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key"
    - name: modern-erlang-noarch
      description: "modern-erlang-el8-noarch"
      baseurl: "https://yum1.rabbitmq.com/erlang/el/8/noarch\nhttps://yum2.rabbitmq.com/erlang/el/8/noarch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-erlang.E495BB49CC4BBE5B.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
    - name: rabbitmq-el8
      description: "rabbitmq-el8"
      baseurl: "https://yum2.rabbitmq.com/rabbitmq/el/8/$basearch\nhttps://yum1.rabbitmq.com/rabbitmq/el/8/$basearch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
    - name: rabbitmq-el8-noarch
      description: "rabbitmq-el8-noarch"
      baseurl: "https://yum2.rabbitmq.com/rabbitmq/el/8/noarch\nhttps://yum1.rabbitmq.com/rabbitmq/el/8/noarch"
      gpgkey: "https://github.com/rabbitmq/signing-keys/releases/download/3.0/cloudsmith.rabbitmq-server.9F4587F226208342.key\nhttps://github.com/rabbitmq/signing-keys/releases/download/3.0/rabbitmq-release-signing-key.asc"
  loop_control:
    loop_var: repo
  when: ansible_distribution_major_version == '8'      

- name: Update package metadata
  yum:
    update_cache: yes

- name: Install RabbitMQ server {{ rabbitmq_version }} and Erlang
  yum:
    name:
      - erlang
      - "rabbitmq-server-{{ rabbitmq_version }}"
    state: present
    allow_downgrade: yes
  register: rabbitmq_install
  until: rabbitmq_install is succeeded
  retries: 3
  delay: 10

- name: Ensure Erlang cookie is identical on all nodes
  copy:
    content: "{{ rabbitmq_erlang_cookie }}"
    dest: /var/lib/rabbitmq/.erlang.cookie
    owner: rabbitmq
    group: rabbitmq
    mode: '0400'
  when: rabbitmq_erlang_cookie

- name: Copy TLS certificates (if enabled)
  template:
    src: "ssl/{{ item }}"
    dest: "/etc/rabbitmq/ssl/{{ item }}"
    owner: rabbitmq
    group: rabbitmq
    mode: '0644'
  loop:
    - "ca_certificate.pem"
    - "server_certificate.pem"
    - "server_key.pem"
  when: rabbitmq_enable_tls

# Deploy configuration before enabling management
- name: Deploy RabbitMQ configuration
  template:
    src: rabbitmq.conf.j2
    dest: /etc/rabbitmq/rabbitmq.conf
    backup: yes
    mode: '0644'
    owner: rabbitmq
    group: rabbitmq
  notify: restart rabbitmq

- name: Enable RabbitMQ service is enabled and started
  systemd:
    name: rabbitmq-server
    state: started
    enabled: yes

- name: Wait for RabbitMQ to be ready
  wait_for:
    port: 5672
    host: localhost
    timeout: 60
    delay: 5

- name: Enable RabbitMQ management plugin
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled
  notify: restart rabbitmq

- name: Flush handlers to restart RabbitMQ after enabling plugin
  meta: flush_handlers

- name: Finalize Cluster Configuration (runs on primary node)
  block:
    - name: Add RabbitMQ admin user with all permissions
      rabbitmq_user:
        user: "{{ rabbitmq_admin_user }}"
        password: "{{ rabbitmq_admin_password }}"
        vhost: /
        configure_priv: .*
        read_priv: .*
        write_priv: .*
        tags: administrator
        state: present
      register: admin_user_result
      until: admin_user_result is succeeded
      retries: 3
      delay: 5

    - name: Delete the default 'guest' user for security
      rabbitmq_user:
        user: guest
        state: absent

    - name: Set High Availability policy for all queues
      rabbitmq_policy:
        name: "{{ rabbitmq_ha_policy_name }}"
        pattern: "{{ rabbitmq_ha_policy_pattern }}"
        tags: "{{ rabbitmq_ha_policy_definition }}"
        state: present

    - name: Set open file limit for RabbitMQ
      pam_limits:
        domain: "rabbitmq"
        limit_type: "-"
        limit_item: "nofile"
        value: "{{ rabbitmq_open_file_limit }}"
      when: rabbitmq_open_file_limit is defined

    - name: Check final cluster status
      command: rabbitmqctl cluster_status
      register: final_cluster_status
      changed_when: false

    - name: Display final cluster status
      debug:
        var: final_cluster_status.stdout_lines
  when: inventory_hostname in groups['rabbitmq_primary']

# Health check verification
- name: Wait for management interface to be ready
  uri:
    url: "http://localhost:15672/api/overview"
    method: GET
    user: "{{ rabbitmq_admin_user }}"
    password: "{{ rabbitmq_admin_password }}"
    force_basic_auth: yes
    status_code: 200
  register: management_check
  until: management_check.status == 200
  retries: 10
  delay: 10

- name: Display RabbitMQ installation status for RHEL
  debug:
    msg: |
      RabbitMQ {{ rabbitmq_version }} installation completed successfully on {{ ansible_distribution }} {{ ansible_distribution_major_version }}!
      Management interface: http://{{ ansible_default_ipv4.address }}:15672
      Admin user: {{ rabbitmq_admin_user }}
      
      Repositories configured:
      - Erlang: modern-erlang (EL{{ ansible_distribution_major_version }})
      - RabbitMQ: rabbitmq-el{{ ansible_distribution_major_version }}
